heat_template_version: 2016-04-08
#
# you can deploy this template using the following command:
# 'openstack stack create -t 04a_minimal_cluster.yaml -e 04a_minimal_cluster-env.yaml <stack_name>'
# 

description: deploys a minimal cluster with consul as service discovery system.

parameters:
 public_network_id:
  type: string
  default: caf8de33-1059-4473-a2c1-2a62d12294fa 
 ssh_keys:
  type: comma_delimited_list

            
resources:
  example_net:
    type: OS::Neutron::Net
    properties: 
      name: example network

  example_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: example subnet
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      network: {get_resource: example_net}
      ip_version: 4
      cidr: 10.0.0.0/8
      allocation_pools:
      - {start: 10.0.0.10, end: 10.255.255.250}

  example_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network_id }}
      name: example network router

  example_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: example_subnet
    properties:
      router: { get_resource: example_router }
      subnet: { get_resource: example_subnet }

  publish_security_group:
    type: OS::Neutron::SecurityGroup
    depends_on: example_subnet_connect
    properties:
      description: Security group for our magnolia frontend server.
      name: publish security group
      rules: 
        - {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 22, port_range_max: 22}
        - {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 80, port_range_max: 80}
        - {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 443, port_range_max: 443}
        - {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 8080, port_range_max: 8080}
        - {remote_ip_prefix: 0.0.0.0/0, protocol: icmp}

  publish_server_group:
    type: OS::Heat::ResourceGroup
    depends_on: publish_security_group
    properties:
      count: 1 
      resource_def: 
        type: publish.yaml
        properties:
          name: publish%index%
          example_net: { get_resource: example_net }
          public_network_id: { get_param: public_network_id }
          ssh_keys: { get_param: ssh_keys }
          security_group: { get_resource: publish_security_group }

  author_server_group:
    type: OS::Heat::ResourceGroup
    depends_on: example_subnet_connect 
    properties:
      count: 1 
      resource_def: 
        type: author.yaml
        properties:
          name: author%index%
          example_net: { get_resource: example_net }
          ssh_keys: { get_param: ssh_keys }
